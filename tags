!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
List	linked_list.cpp	/^	List() : m_head(nullptr), $/;"	f	class:List
List	linked_list.cpp	/^class List{$/;"	c	file:
Node	linked_list.cpp	/^	Node() : data(0), $/;"	f	struct:Node
Node	linked_list.cpp	/^struct Node{$/;"	s	file:
copy	loading.sh	/^copy(){$/;"	f
data	linked_list.cpp	/^	int data;$/;"	m	struct:Node	file:
detect_loop	linked_list.cpp	/^int detect_loop(const List &list)$/;"	f
display_node	linked_list.cpp	/^void List::display_node()$/;"	f	class:List
get_head	linked_list.cpp	/^Node* List::get_head()const$/;"	f	class:List
get_tail	linked_list.cpp	/^Node* List::get_tail()const$/;"	f	class:List
loop_address	linked_list.cpp	/^void loop_address(Node* slow_ptr, Node* fast_ptr, const List& list)$/;"	f
m_head	linked_list.cpp	/^	Node *m_head, *m_tail;$/;"	m	class:List	file:
m_tail	linked_list.cpp	/^	Node *m_head, *m_tail;$/;"	m	class:List	file:
main	linked_list.cpp	/^int main()$/;"	f
next	linked_list.cpp	/^	Node* next;$/;"	m	struct:Node	file:
push_node	linked_list.cpp	/^void List::push_node(int value)$/;"	f	class:List
spin	loading.sh	/^spin(){$/;"	f
~List	linked_list.cpp	/^	~List(){$/;"	f	class:List
~Node	linked_list.cpp	/^	~Node(){$/;"	f	struct:Node
